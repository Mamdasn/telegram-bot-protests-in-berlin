services:
  tor_privoxy:
    container_name: tor_privoxy
    restart: always
    image: dockage/tor-privoxy:latest
    ports:
      - "9051:9051" # Tor control port
        #  - "8118:8118" # Privoxy
  postgres_db:
    image: 'postgres:14-alpine'
    restart: 'always'
    container_name: postgres_db
    environment:
        POSTGRES_USER: 'postgres'
        POSTGRES_PASSWORD: '1234'
        POSTGRES_DB: 'postgres'
        log_statement: "all"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
        #ports:
        #  - '5432:5432' # postgresql
  protestcrawler:
    container_name: protestcrawler
    build: "protestcrawler"
    image: ${PROTESTCRAWLER_IMAGE_BUILD:-sfarhad/protestcrawler:4.0.0}
    environment:
      - DB_UPDATE_PERIOD=${DB_UPDATE_PERIOD}
    volumes:
      - ./protestcrawler/output:/app/output
    command: ["sh", "-c", "python protestcrawler.py >> /app/output/protestcrawler.logs 2>&1"]
  telegrambot:
    container_name: telegrambot
    build: "telegrambot"
    image: ${TELEGRAMBOT_IMAGE_BUILD:-sfarhad/telegrambot:4.0.0}
    ports:
      - '443:443' # telegram server communication
    environment:
      - IP_ADDRESS=${IP_ADDRESS}
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
    volumes:
      - ./telegrambot/output:/app/output
    command: ["sh", "-c", "/app/initial-setup-files/webhook-setup.sh && /app/initial-setup-files/nginx-setup.sh && nginx && gunicorn -w 2 --bind 0.0.0.0:5000 wsgi:app >> /app/output/telegram.logs 2>&1"]
